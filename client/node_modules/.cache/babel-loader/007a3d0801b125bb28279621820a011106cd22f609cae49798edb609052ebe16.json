{"ast":null,"code":"var _jsxFileName = \"/Users/magomed/WebstormProjects/MMOGameMAI/client/src/Sell.js\",\n  _s = $RefreshSig$();\n// client/src/Sell.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sell({\n  onSell\n}) {\n  _s();\n  const [Wood, setWood] = useState(0);\n  const [Iron, setIron] = useState(0);\n  const [Bread, setBread] = useState(0);\n  const [WoodPraice, setWoodPraice] = useState(0);\n  const [IronPraice, setIronPraice] = useState(0);\n  const [BreadPraice, setBreadPraice] = useState(0);\n  const [error, setError] = useState('');\n  const handleSell = (Wood_, WoodPraice_, Iron_, IronPraice_, Bread_, BreadPraice_) => {\n    onSell(Wood_, WoodPraice_, Iron_, IronPraice_, Bread_, BreadPraice_);\n  };\n  const fetchTrades = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/game/sell', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setError('');\n        wood = data.trade3;\n        Iron_ = data.trade1;\n        Bread_ = data.trade2;\n        WoodPraice_ = data.trade3Praice;\n        IronPraice_ = data.trade1Praice;\n        BreadPraice_ = data.trade2Praice;\n      } else {\n        setError(data.message || 'Failed to load your trades.');\n      }\n    } catch (err) {\n      setError('Network error');\n      console.error('Fetch error:', err);\n    }\n  };\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sell your resources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount of Wood:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"wood\",\n        value: Wood_,\n        onChange: e => setWood(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Praice:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"woodPraice\",\n        value: WoodPraice_,\n        onChange: e => setWoodPraice(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount of Bread:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Bread\",\n        value: Bread_,\n        onChange: e => setBread(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Praice:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"BreadPraice\",\n        value: BreadPraice_,\n        onChange: e => setBreadPraice(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount of Iron:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Iron\",\n        value: Iron_,\n        onChange: e => setIron(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Praice:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"IronPraice\",\n        value: IronPraice_,\n        onChange: e => setIronPraice(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSell(Wood, WoodPraice, Iron, IronPraice, Bread, BreadPraice),\n      children: \"confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Sell, \"SB+nevtW22qF9UusKBE4rsN/2CU=\");\n_c = Sell;\nexport default Sell;\nvar _c;\n$RefreshReg$(_c, \"Sell\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Sell","onSell","_s","Wood","setWood","Iron","setIron","Bread","setBread","WoodPraice","setWoodPraice","IronPraice","setIronPraice","BreadPraice","setBreadPraice","error","setError","handleSell","Wood_","WoodPraice_","Iron_","IronPraice_","Bread_","BreadPraice_","fetchTrades","response","fetch","method","headers","body","JSON","stringify","userId","data","json","ok","wood","trade3","trade1","trade2","trade3Praice","trade1Praice","trade2Praice","message","err","console","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","parseInt","target","onClick","_c","$RefreshReg$"],"sources":["/Users/magomed/WebstormProjects/MMOGameMAI/client/src/Sell.js"],"sourcesContent":["// client/src/Sell.js\nimport React, { useState, useEffect } from 'react';\n\nfunction Sell({ onSell }) {\n    const [Wood, setWood] = useState(0);\n    const [Iron, setIron] = useState(0);\n    const [Bread, setBread] = useState(0);\n    const [WoodPraice, setWoodPraice] = useState(0);\n    const [IronPraice, setIronPraice] = useState(0);\n    const [BreadPraice, setBreadPraice] = useState(0);\n    const [error, setError] = useState('');\n\n    const handleSell = (Wood_, WoodPraice_, Iron_, IronPraice_, Bread_, BreadPraice_) => {\n        onSell(Wood_, WoodPraice_, Iron_, IronPraice_, Bread_, BreadPraice_);\n    };\n\n\n    const fetchTrades = async () => {\n        try {\n            const response = await fetch('http://localhost:4000/game/sell', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({userId})\n            });\n            const data = await response.json();\n\n            if (response.ok) {\n                setError('')\n                wood=data.trade3;\n                Iron_=data.trade1;\n                Bread_=data.trade2;\n                WoodPraice_=data.trade3Praice;\n                IronPraice_=data.trade1Praice;\n                BreadPraice_=data.trade2Praice;\n            } else {\n                setError(data.message || 'Failed to load your trades.');\n            }\n        } catch (err) {\n            setError('Network error');\n            console.error('Fetch error:', err);\n        }\n    };\n\n    useEffect(() => {\n        fetchTrades();\n    }, []);\n\n\n\n    return (\n        <div>\n\n            <p style={{ color: 'red' }}>{error}</p>;\n\n            <h2>Sell your resources</h2>\n            <div>\n                <label htmlFor=\"amount\">Amount of Wood:</label>\n                <input\n                    type=\"number\"\n                    id=\"wood\"\n                    value={Wood_}\n                    onChange={(e) => setWood(parseInt(e.target.value))}\n                />\n                <label htmlFor=\"amount\">Praice:</label>\n                <input\n                    type=\"number\"\n                    id=\"woodPraice\"\n                    value={WoodPraice_}\n                    onChange={(e) => setWoodPraice(parseInt(e.target.value))}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"amount\">Amount of Bread:</label>\n                <input\n                    type=\"number\"\n                    id=\"Bread\"\n                    value={Bread_}\n                    onChange={(e) => setBread(parseInt(e.target.value))}\n                />\n                <label htmlFor=\"amount\">Praice:</label>\n                <input\n                    type=\"number\"\n                    id=\"BreadPraice\"\n                    value={BreadPraice_}\n                    onChange={(e) => setBreadPraice(parseInt(e.target.value))}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"amount\">Amount of Iron:</label>\n                <input\n                    type=\"number\"\n                    id=\"Iron\"\n                    value={Iron_}\n                    onChange={(e) => setIron(parseInt(e.target.value))}\n                />\n                <label htmlFor=\"amount\">Praice:</label>\n                <input\n                    type=\"number\"\n                    id=\"IronPraice\"\n                    value={IronPraice_}\n                    onChange={(e) => setIronPraice(parseInt(e.target.value))}\n                />\n            </div>\n            <button onClick={() => handleSell(Wood, WoodPraice, Iron, IronPraice, Bread, BreadPraice)}>confirm</button>\n        </div>\n    );\n}\nexport default Sell;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}