{"ast":null,"code":"var _jsxFileName = \"/Users/magomed/WebstormProjects/MMOGameMAI/client/src/Sell.js\",\n  _s = $RefreshSig$();\n// client/src/Sell.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sell({\n  onSell,\n  userId\n}) {\n  _s();\n  const [Wood, setWood] = useState(0);\n  const [Iron, setIron] = useState(0);\n  const [Bread, setBread] = useState(0);\n  const [WoodPraice, setWoodPraice] = useState(0);\n  const [IronPraice, setIronPraice] = useState(0);\n  const [BreadPraice, setBreadPraice] = useState(0);\n  const [error, setError] = useState('');\n  const handleSell = (Wood_, WoodPraice_, Iron_, IronPraice_, Bread_, BreadPraice_) => {\n    onSell(Wood_, WoodPraice_, Iron_, IronPraice_, Bread_, BreadPraice_);\n  };\n  const fetchTrades = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/game/sell/${userId}`);\n      const data = await response.json();\n      if (response.ok) {\n        setError('');\n        setWood(data.trade3);\n        setIron(data.trade1);\n        setBread(data.trade2);\n        setWoodPraice(data.trade3Praice);\n        setIronPraice(data.trade1Praice);\n        setBreadPraice(data.trade2Praice);\n      } else {\n        setError(data.message || 'Failed to load your trades.');\n      }\n    } catch (err) {\n      setError('Network error');\n      console.error('Fetch error:', err);\n    }\n  };\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sell your resources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount of Wood:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"wood\",\n        value: Wood,\n        onChange: e => setWood(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Praice:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"woodPraice\",\n        value: WoodPraice,\n        onChange: e => setWoodPraice(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount of Bread:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Bread\",\n        value: Bread,\n        onChange: e => setBread(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Praice:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"BreadPraice\",\n        value: BreadPraice,\n        onChange: e => setBreadPraice(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount of Iron:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"Iron\",\n        value: Iron,\n        onChange: e => setIron(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Praice:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"IronPraice\",\n        value: IronPraice,\n        onChange: e => setIronPraice(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSell(Wood, WoodPraice, Iron, IronPraice, Bread, BreadPraice),\n      children: \"confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Sell, \"SB+nevtW22qF9UusKBE4rsN/2CU=\");\n_c = Sell;\nexport default Sell;\nvar _c;\n$RefreshReg$(_c, \"Sell\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Sell","onSell","userId","_s","Wood","setWood","Iron","setIron","Bread","setBread","WoodPraice","setWoodPraice","IronPraice","setIronPraice","BreadPraice","setBreadPraice","error","setError","handleSell","Wood_","WoodPraice_","Iron_","IronPraice_","Bread_","BreadPraice_","fetchTrades","response","fetch","data","json","ok","trade3","trade1","trade2","trade3Praice","trade1Praice","trade2Praice","message","err","console","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","parseInt","target","onClick","_c","$RefreshReg$"],"sources":["/Users/magomed/WebstormProjects/MMOGameMAI/client/src/Sell.js"],"sourcesContent":["// client/src/Sell.js\nimport React, { useState, useEffect } from 'react';\n\nfunction Sell({ onSell, userId }) {\n    const [Wood, setWood] = useState(0);\n    const [Iron, setIron] = useState(0);\n    const [Bread, setBread] = useState(0);\n    const [WoodPraice, setWoodPraice] = useState(0);\n    const [IronPraice, setIronPraice] = useState(0);\n    const [BreadPraice, setBreadPraice] = useState(0);\n    const [error, setError] = useState('');\n\n    const handleSell = (Wood_, WoodPraice_, Iron_, IronPraice_, Bread_, BreadPraice_) => {\n        onSell(Wood_, WoodPraice_, Iron_, IronPraice_, Bread_, BreadPraice_);\n    };\n\n\n    const fetchTrades = async () => {\n        try {\n            const response = await fetch(`http://localhost:4000/game/sell/${userId}`);\n            const data = await response.json();\n\n            if (response.ok) {\n                setError('')\n                setWood(data.trade3);\n                setIron(data.trade1);\n                setBread(data.trade2);\n                setWoodPraice(data.trade3Praice);\n                setIronPraice(data.trade1Praice);\n                setBreadPraice(data.trade2Praice);\n            } else {\n                setError(data.message || 'Failed to load your trades.');\n            }\n        } catch (err) {\n            setError('Network error');\n            console.error('Fetch error:', err);\n        }\n    };\n\n    useEffect(() => {\n        fetchTrades();\n    }, []);\n\n\n    return (\n        <div>\n\n            <p style={{ color: 'red' }}>{error}</p>\n\n            <h2>Sell your resources</h2>\n            <div>\n                <label htmlFor=\"amount\">Amount of Wood:</label>\n                <input\n                    type=\"number\"\n                    id=\"wood\"\n                    value={Wood}\n                    onChange={(e) => setWood(parseInt(e.target.value))}\n                />\n                <label htmlFor=\"amount\">Praice:</label>\n                <input\n                    type=\"number\"\n                    id=\"woodPraice\"\n                    value={WoodPraice}\n                    onChange={(e) => setWoodPraice(parseInt(e.target.value))}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"amount\">Amount of Bread:</label>\n                <input\n                    type=\"number\"\n                    id=\"Bread\"\n                    value={Bread}\n                    onChange={(e) => setBread(parseInt(e.target.value))}\n                />\n                <label htmlFor=\"amount\">Praice:</label>\n                <input\n                    type=\"number\"\n                    id=\"BreadPraice\"\n                    value={BreadPraice}\n                    onChange={(e) => setBreadPraice(parseInt(e.target.value))}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"amount\">Amount of Iron:</label>\n                <input\n                    type=\"number\"\n                    id=\"Iron\"\n                    value={Iron}\n                    onChange={(e) => setIron(parseInt(e.target.value))}\n                />\n                <label htmlFor=\"amount\">Praice:</label>\n                <input\n                    type=\"number\"\n                    id=\"IronPraice\"\n                    value={IronPraice}\n                    onChange={(e) => setIronPraice(parseInt(e.target.value))}\n                />\n            </div>\n            <button onClick={() => handleSell(Wood, WoodPraice, Iron, IronPraice, Bread, BreadPraice)}>confirm</button>\n        </div>\n    );\n}\nexport default Sell;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}