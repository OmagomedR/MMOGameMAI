{"ast":null,"code":"var _jsxFileName = \"/Users/magomed/WebstormProjects/MMOGameMAI/client/src/GameScreen.js\",\n  _s = $RefreshSig$();\n// client/src/GameScreen.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport ProfessionSelection from './ProfessionSelection';\nimport GoldExchange from \"./GoldExchange\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameScreen({\n  userId\n}) {\n  _s();\n  const [profession, setProfession] = useState('');\n  const [resources, setResources] = useState({\n    resource0: 0,\n    resource1: 0,\n    resource2: 0,\n    resource3: 0\n  });\n  const [error, setError] = useState('');\n  const [mess, setmess] = useState('');\n  let pushed = 0;\n  const fetchUserData = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/game/resources/${userId}`);\n      const data = await response.json();\n      if (response.ok) {\n        setResources(data);\n        setProfession(data.profession);\n      } else {\n        setError(data.message || 'Failed to fetch resources');\n      }\n    } catch (error) {\n      console.error('Error fetching resources:', error);\n      setError('Network error');\n    }\n  };\n  useEffect(() => {\n    // Fetch user data (profession, resources) when component mounts\n    fetchUserData();\n  }, [userId]); // Run only when userId changes\n\n  const handleProfessionChange = async newProfession => {\n    try {\n      const response = await fetch('http://localhost:4000/game/change-profession', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          profession: newProfession\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setProfession(data.profession);\n      } else {\n        setError(data.message || 'Failed to change profession');\n      }\n    } catch (error) {\n      console.error('Error changing profession:', error);\n      setError('Network error');\n    }\n  };\n  const handleGoldExchange = async (resourceType, amount) => {\n    try {\n      const response = await fetch('http://localhost:4000/game/goldexchange', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          resource: resourceType,\n          quantity: amount\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || 'Failed to exchange gold');\n      } else {\n        setResources(data);\n        setmess(data.message);\n      }\n    } catch (error) {\n      console.error('Error exchanging gold:', error);\n      setError('Network error');\n    }\n  };\n  const Gainbutton = async () => {\n    pushed++;\n    if (pushed > 3) {\n      pushed = 0;\n      try {\n        const response = await fetch('http://localhost:4000/game/gain-resources', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          fetchUserData();\n          setmess(data.message);\n        } else {\n          setError(data.message || 'Failed to gain resources');\n        }\n      } catch (error) {\n        console.error('Error fetching resources:', error);\n        setError('Network effrror');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }, this), mess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Profession: \", profession || 'Unemployed']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0417\\u043E\\u043B\\u043E\\u0442\\u043E: \", resources.resource0.toFixed(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0416\\u0435\\u043B\\u0435\\u0437\\u043E: \", resources.resource1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0415\\u0434\\u0430: \", resources.resource2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0414\\u0435\\u0440\\u0435\\u0432\\u043E: \", resources.resource3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: Gainbutton,\n      children: \"\\u0434\\u043E\\u0431\\u044B\\u0442\\u044C \\u0440\\u0435\\u0441\\u0443\\u0440\\u0441\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProfessionSelection, {\n      onChangeProfession: handleProfessionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoldExchange, {\n      onGoldExchange: handleGoldExchange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(GameScreen, \"SO6j2eJ0jBCFB/xnTXL94+gfpfc=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ProfessionSelection","GoldExchange","jsxDEV","_jsxDEV","GameScreen","userId","_s","profession","setProfession","resources","setResources","resource0","resource1","resource2","resource3","error","setError","mess","setmess","pushed","fetchUserData","response","fetch","data","json","ok","message","console","handleProfessionChange","newProfession","method","headers","body","JSON","stringify","handleGoldExchange","resourceType","amount","resource","quantity","Gainbutton","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","toFixed","type","className","onClick","onChangeProfession","onGoldExchange","_c","$RefreshReg$"],"sources":["/Users/magomed/WebstormProjects/MMOGameMAI/client/src/GameScreen.js"],"sourcesContent":["// client/src/GameScreen.js\nimport React, {useState, useEffect, useRef} from 'react';\nimport ProfessionSelection from './ProfessionSelection';\nimport GoldExchange from \"./GoldExchange\";\n\nfunction GameScreen({ userId }) {\n    const [profession, setProfession] = useState('');\n    const [resources, setResources] = useState({ resource0: 0,resource1: 0, resource2: 0, resource3: 0 });\n    const [error, setError] = useState('');\n    const [mess, setmess] = useState('');\n\n    let pushed = 0;\n\n    const fetchUserData = async () => {\n        try {\n            const response = await fetch(`http://localhost:4000/game/resources/${userId}`);\n            const data = await response.json();\n\n            if (response.ok) {\n                setResources(data);\n                setProfession(data.profession);\n            } else {\n                setError(data.message || 'Failed to fetch resources');\n            }\n        } catch (error) {\n            console.error('Error fetching resources:', error);\n            setError('Network error');\n        }\n    };\n\n    useEffect(() => {\n        // Fetch user data (profession, resources) when component mounts\n        fetchUserData();\n    }, [userId]); // Run only when userId changes\n\n    const handleProfessionChange = async (newProfession) => {\n        try {\n            const response = await fetch('http://localhost:4000/game/change-profession', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ userId, profession: newProfession })\n            });\n\n            const data = await response.json();\n\n            if (response.ok) {\n                setProfession(data.profession);\n            } else {\n                setError(data.message || 'Failed to change profession');\n            }\n        } catch (error) {\n            console.error('Error changing profession:', error);\n            setError('Network error');\n        }\n    };\n\n    const handleGoldExchange = async (resourceType, amount) => {\n        try {\n            const response = await fetch('http://localhost:4000/game/goldexchange', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ userId, resource: resourceType, quantity: amount })\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                setError(data.message || 'Failed to exchange gold');\n            }else{\n                setResources(data);\n                setmess(data.message)\n            }\n        } catch (error) {\n            console.error('Error exchanging gold:', error);\n            setError('Network error');\n        }\n    };\n\n    const Gainbutton = async () => {\n        pushed++;\n        if (pushed > 3) {\n            pushed=0;\n            try {\n                const response = await fetch('http://localhost:4000/game/gain-resources', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({ userId })\n                });\n\n                const data = await response.json();\n                if (response.ok) {\n                    fetchUserData();\n                    setmess(data.message)\n                } else {\n                    setError(data.message || 'Failed to gain resources');\n                }\n            } catch (error) {\n                console.error('Error fetching resources:', error);\n                setError('Network effrror');\n            }\n        }\n    };\n\n\n    return (\n        <div>\n            <h2>Game Screen</h2>\n            {error && <p style={{color: 'red'}}>{error}</p>}\n            {mess && <p>{mess}</p>}\n            <p>User ID: {userId}</p>\n            <p>Profession: {profession || 'Unemployed'}</p>\n            <p>Золото: {resources.resource0.toFixed(1)}</p>\n            <p>Железо: {resources.resource1}</p>\n            <p>Еда: {resources.resource2}</p>\n            <p>Дерево: {resources.resource3}</p>\n            <button type=\"button\" className=\"btn\" onClick={Gainbutton}>добыть ресурсы</button>\n            <ProfessionSelection onChangeProfession={handleProfessionChange}/>\n            <GoldExchange onGoldExchange={handleGoldExchange}/>\n        </div>\n    );\n}\n\nexport default GameScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}