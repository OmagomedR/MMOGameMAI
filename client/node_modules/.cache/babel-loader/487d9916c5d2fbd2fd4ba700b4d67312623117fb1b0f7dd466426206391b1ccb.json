{"ast":null,"code":"var _jsxFileName = \"/Users/magomed/WebstormProjects/MMOGameMAI/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Login from './Login';\nimport Register from './Register';\nimport GameScreen from './GameScreen';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in (e.g., token in localStorage)\n    const storedUserId = localStorage.getItem('userId');\n    if (storedUserId) {\n      setUserId(storedUserId);\n    }\n  }, []);\n  const handleLoginSuccess = userId => {\n    setUserId(userId);\n  };\n  const handleRegisterSuccess = () => {\n    // You might want to automatically log in the user after successful registration\n    // For now, just redirect to the login page\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('userId');\n    setUserId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MAI-MMO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), userId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GameScreen, {\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        onLoginSuccess: handleLoginSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Register, {\n        onRegisterSuccess: handleRegisterSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"QugO1+XZZWuQFzyainJTQ7VwjYQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Register","GameScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userId","setUserId","storedUserId","localStorage","getItem","handleLoginSuccess","handleRegisterSuccess","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onLoginSuccess","onRegisterSuccess","_c","$RefreshReg$"],"sources":["/Users/magomed/WebstormProjects/MMOGameMAI/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Login from './Login';\nimport Register from './Register';\nimport GameScreen from './GameScreen';\n\nfunction App() {\n  const [userId, setUserId] = useState(null);\n\n  useEffect(() => {\n    // Check if user is already logged in (e.g., token in localStorage)\n    const storedUserId = localStorage.getItem('userId');\n    if (storedUserId) {\n      setUserId(storedUserId);\n    }\n  }, []);\n\n  const handleLoginSuccess = (userId) => {\n    setUserId(userId);\n  };\n\n  const handleRegisterSuccess = () => {\n    // You might want to automatically log in the user after successful registration\n    // For now, just redirect to the login page\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('userId');\n    setUserId(null);\n  };\n\n  return (\n      <div>\n        <h1>MAI-MMO</h1>\n        {userId ? (\n            <>\n              <GameScreen userId={userId} />\n              <button onClick={handleLogout}>Logout</button>\n            </>\n        ) : (\n            <>\n              <Login onLoginSuccess={handleLoginSuccess} />\n              <Register onRegisterSuccess={handleRegisterSuccess} />\n            </>\n        )}\n      </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACnD,IAAIF,YAAY,EAAE;MAChBD,SAAS,CAACC,YAAY,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,kBAAkB,GAAIL,MAAM,IAAK;IACrCC,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,MAAMM,qBAAqB,GAAGA,CAAA,KAAM;IAClC;IACA;EAAA,CACD;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBJ,YAAY,CAACK,UAAU,CAAC,QAAQ,CAAC;IACjCP,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIN,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfb,MAAM,gBACHL,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACEd,OAAA,CAACF,UAAU;QAACO,MAAM,EAAEA;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9BlB,OAAA;QAAQmB,OAAO,EAAEP,YAAa;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC9C,CAAC,gBAEHlB,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACEd,OAAA,CAACJ,KAAK;QAACwB,cAAc,EAAEV;MAAmB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7ClB,OAAA,CAACH,QAAQ;QAACwB,iBAAiB,EAAEV;MAAsB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtD,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ;AAACd,EAAA,CAzCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}